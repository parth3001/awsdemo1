# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
     
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      #- image: docker-aws-cli
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
   
    steps:
      - checkout
      - run: ls -alt
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      
      - run: gradle dependencies
      - run: ls -alt
 # Lambda Updates
      - run:
          name: Env Variables
          command: |
            echo $AWS_ACCESS_KEY_ID_SANDBOX


      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # run tests!
      - run: gradle clean
      #- run: gradle test
      - run: gradle build
      - run: ls -alt
      - run: ls -alt ./build/libs
      - store_artifacts:
          run: pwd
          run: ls -alt ./build/libs
          path: ./build/libs/repo-0.0.1-SNAPSHOT.war
          destination: artifact-file
      #- run: aws -version
      #- run: pip install awscli --upgrade --user
      #- run: which aws
      # install python and awscli
      - run: sudo apt-get update && sudo apt-get install -qq -y python-pip libpython-dev
      - run: curl -O https://bootstrap.pypa.io/get-pip.py && sudo python get-pip.py
      - run: sudo pip install -q awscli --upgrade
      - run: aws --version
      - run: cp ./build/libs/repo-0.0.1-SNAPSHOT.war ./build/libs/repo-0.0.1-SNAPSHOT.war.zip

      - run: which aws
      - run: ls -alt ./build/libs
      - run: ls
      #- run: 
          #name: s3
          #command: aws s3 cp ./build/libs/repo-0.0.1-SNAPSHOT.war.zip s3://varadbookit/
      #- run: aws sts assume-role --role-arn arn:aws:iam::769230076517:role/RoleForCircleCIDevOps --role-session-name test    
      #- run: aws sts assume-role --role-arn arn:aws:iam::769230076517:role/RoleForCicleCIDevOps --role-session-name foo 
      #- run: aws lambda update-function-code --function-name Hello --s3-bucket s3.us-east-2.amazonaws.com/varadbookit --s3-key Hello.zip    
      #- run: aws lambda update-function-code --function-name arn:aws:lambda:us-east-2:657766436554:function:Hello --region us-east-2 --s3-bucket varadbookit --s3-key Hello.zip  
      #- run: aws lambda update-function-code --function-name arn:aws:lambda:us-east-1:769230076517:function:test --region us-east-1 --s3-bucket devops-non-prod-s3-bucket --s3-key test.zip  
      #- run: aws lambda update-function-code --function-name test --region us-east-1 --s3-bucket devops-non-prod-s3-bucket --s3-key test.zip  
      #- run: aws lambda update-alias --function-name arn:aws:lambda:us-east-2:657766436554:function:Hello --name varadh --region us-east-2 --s3-bucket varadbookit --s3-key Hello.zip  
      #- run: aws lambda publish-version --function-name arn:aws:lambda:us-east-1:769230076517:function:test$LATEST --region us-east-1 
      
      # Lambda Updates
      - run:
          name: Lambda Updates
          command: |
            mkdir ~/.aws
            cp credentials ~/.aws
            echo $AWS_ACCESS_KEY_ID_SANDBOX
            #aws configure --profile default
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_SANDBOX
            echo $aws_access_key_id
            #aws sts assume-role --role-arn arn:aws:iam::769230076517:role/RoleForCicleCIDevOps --role-session-name foo 
            aws lambda update-function-code --function-name test --region us-east-1 --s3-bucket devops-non-prod-s3-bucket --s3-key test.zip --profile default
            aws lambda publish-version --function-name test$LATEST --region us-east-1 --profile default
            
      
      
